shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages("leaflet")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages("raster")
install.packages('sp')
install.packages('raster')
install.packages("raster")
shiny::runApp()
install.packages('raster', repos = 'http://r-forge.r-project.org/', type = 'source')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages("raster")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
aa <- NULL
aa
is.null(aa)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?file.path
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
vardescr <- read.csv("prova.csv", stringsAsFactors = FALSE, header=T)
vardescr <- read.csv("prova.csv", stringsAsFactors = FALSE, header=F)
vardescr <- read.csv("prova.csv", stringsAsFactors = FALSE, header=F)
vardescr <- read.csv("prova.csv", stringsAsFactors = FALSE, header=F)
vardescr <- read.csv("prova.csv", stringsAsFactors = FALSE, header=F)
vardescr <- read.csv("prova.csv", header=F)
vardescr <- read.table("prova.csv", header=F)
vardescr <- read.table("prova.csv", header=F, sep=";")
vardescr <- read.table("prova.csv", header=F, sep=",")
vardescr <- read.table("prova.csv", header=F, sep="\t")
vardescr <- read.table("prova.txt", header=F, sep="|")
vardescr
str(vardescr)
vardescr <- read.table("prova.txt", header=F, sep="|", stringsAsFactors = F)
str(vardescr)
vardescr <- read.table("prova.txt", header=F, sep="|", stringsAsFactors = F)
str(vardescr)
vardescr <- read.table("prova.csv", header=F, sep=";")
vardescr <- read.txt("prova.txt", header=F)
vardescr <- read.table("prova.txt", header=F, sep = "\t")
vardescr <- read.table("prova.txt")
vardescr <- read.table("prova.txt", sep=" ")
vardescr <- read.table("prova.txt", sep="\t")
vardescr <- read.table("prova.txt", sep=";")
vardescr <- read.table("prova.txt", sep="\t")
str(vardescr)
vardescr <- read.table("prova.txt", sep="\t", stringsAsFactors = F)
str(vardescr)
vardescr[,1]
vardescr[,2]
vardescr[1,2]
vardescr[,"opening1"]
vardescr[vardescr[,1]=="opening1",]
vardescr[vardescr[,1]=="opening1",2]
shiny::runApp()
library(ggplot2)
library(plyr)
library(dygraphs)
library(xts)
library(zoo)
library(stringr)
library(lubridate)
setwd("/Users/giacomodc/Dropbox/PhD/northpointRAW")
northp <- read.csv("northp.csv", stringsAsFactors = FALSE, header=T)
northp[,"arrival_time"] <- as.POSIXct(northp[,"arrival_time"], format="%Y-%m-%d %H:%M:%S")
northp[,"exit_time"] <- as.POSIXct(northp[,"exit_time"], format="%Y-%m-%d %H:%M:%S")
northp[,"start_handling_time"] <- as.POSIXct(northp[,"start_handling_time"], format="%Y-%m-%d %H:%M:%S")
northp[,"stop_handling_time"] <- as.POSIXct(northp[,"stop_handling_time"], format="%Y-%m-%d %H:%M:%S")
shiny::runApp('~/Dropbox/PhD/LFG project/app_01')
vardescr <- read.table("vardescr.txt", sep="\t", stringsAsFactors = F)
setwd("/Users/giacomodc/Dropbox/PhD/LFG project/app_01")
vardescr <- read.table("vardescr.txt", sep="\t", stringsAsFactors = F)
strt(vardescr)
str(vardescr)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
vardescr <- read.table("vardescr.txt", sep="\t", stringsAsFactors = F)
input$delivery_var <- "opening1"
aa <- "opening1"
descr <- vardescr[vardescr[,2]==aa,3]
descr
paste("ciao", descr)
paste(descr)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
