<<<<<<< HEAD
if(n==0){
print('haha')
terminate<-1
=======
dat[,"entry_time"] <- as.POSIXct(dat[,"entry_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
dat[,"exit_time"] <- as.POSIXct(dat[,"exit_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
unique(dat$date)
shiny::runApp()
shiny::runApp()
shiny::runApp()
dat <- read.csv('data/final.csv',stringsAsFactors = FALSE, header=T)
dat[,"entry_time"] <- as.POSIXct(dat[,"entry_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
dat[,"exit_time"] <- as.POSIXct(dat[,"exit_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
input_time <- c('6:00:00','18:00:00')
time_filter <- c(6,18)
park_location <- NULL
start <- Sys.time()
temp <- dat
temp <- temp[!is.na(temp[,"entry_time"]) & !is.na(temp[,"exit_time"]),c("park_location", "entry_time", "exit_time", "dtime")]
if (!is.null(park_location)){
temp <- subset(temp,temp$park_location %in% park_location)
}
entries <- data.frame(cbind(as.character(temp[,"entry_time"]), rep(1,length(temp[,"entry_time"]))), stringsAsFactors=F)
exits <- data.frame(cbind(as.character(temp[,"exit_time"]), rep(-1,length(temp[,"exit_time"]))), stringsAsFactors=F)
no_agents <- rbind(entries, exits)
names(no_agents)[1] <- "time"
no_agents[,"time"] <- as.POSIXct(no_agents[,"time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
no_agents <- no_agents[order(no_agents[,"time"] ),]
no_agents[,2] <- as.numeric(no_agents[,2])
no_agents[,3] <- NA
no_agents[1,3] <- no_agents[1,2]
for (j in 2:nrow(no_agents)) no_agents[j,3] <- no_agents[j-1,3]+no_agents[j,2]
no_agents <- no_agents[,c(1,3)]
names(no_agents) <- c('time','number')
no_agents$date <- date(no_agents$time)
year(no_agents$time) <- 2016
month(no_agents$time) <- 1
day(no_agents$time) <- 1
system_table <- no_agents
dates <- unique(system_table$date)
system_table[2] <- NULL
system_table[2] <- NULL
for (i in 1:length(dates)){
temp <- subset(no_agents,no_agents$date==dates[i])
system_table <- merge(system_table,temp[c(1,2)],by='time',all.x=TRUE)
names(system_table)[length(names(system_table))] <- as.character(dates[i])
}
system_table[1,-1] <- 0
system_table[-1] <- na.locf(system_table[-1])
View(system_table)
system_table <- xts(system_table[,-1],order.by=system_table[,1],tz='Asia/Singapore')
View(system_table)
write.csv(system_table,file='sys_perf.csv')
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = FALSE, header=T)
stepplot <- dygraph(system_table,main="Total number of goods vehicles in the system") %>%
dyHighlight(highlightCircleSize = 3, highlightSeriesBackgroundAlpha = 0.2, hideOnMouseOut = FALSE) %>%
dyLegend(labelsSeparateLines=T, width=170) %>%
dyAxis("y", label="No. goods vehicles") %>%
dyAxis("x", label="Time") %>%
dyOptions(stepPlot=T,useDataTimezone = T)
if (mall_filter=='Mall 1'){
stepplot <- dyLimit(stepplot, 6, color = 'red')
}else if (mall_filter=='Mall 2'){
stepplot <- dyLimit(stepplot, 18, color = 'green')
}else{
stepplot <- dyLimit(stepplot, 6, color = 'red')
stepplot <- dyLimit(stepplot, 18, color = 'green')
>>>>>>> giacomodc/master
}
}
}
return(D)
}
sim(8)
shiny::runApp('Desktop/SMART/datastories')
shiny::runApp('Desktop/SMART/datastories')
rsconnect::deployApp('/Users/GZQ/Desktop/SMART/datastories')
10^13 mod 23
10^13%%23
(-72)%%47
72&&47
72%%47
f1 <- function(x){n^0.9*(log(n)^10)}
f2 <- function(x){n}
plot(f1,1,100,add=TRUE)
function(x){n^0.9*(log(n)^10)}
f1 <- function(x){n**0.9*(log(n)^10)}
f2 <- function(x){n}
plot(f1,1,100,add=TRUE)
f1 <- function(n){n**0.9*(log(n)^10)}
f1 <- function(n){n**0.9*(log(n)^10)}
f2 <- function(n){n}
plot(f1,1,100,add=TRUE)
plot(f2,1,100,add=TRUE)
plot(f1,1,100)
plot(f2,1,200)
f1 <- function(n){n**0.9*(log(n)^10)}
f2 <- function(n){n}
plot(f1,1,100,add=TRUE)
plot(f2,1,100,add=TRUE)
plot(f1,1,100)
plot(f2,1,200)
f1 <- function(n){n**0.9*(log(n)^10)}
f2 <- function(n){n}
plot(f1,1,100)
plot(f2,1,100,add=TRUE)
f1 <- function(n){n**0.9*(log(n)**10)}
f2 <- function(n){n}
plot(f1,1,100)
plot(f2,1,100,add=TRUE)
f1 <- function(n){n**0.9*(log(n)**10)}
f2 <- function(n){n}
plot(f2,1,200)
plot(f1,1,100,add=TRUE)
f1 <- function(n){(n**0.9)*((log(n))**10)}
f2 <- function(n){n}
plot(f1,1,100,add=TRUE)
plot(f2,1,100,add=TRUE)
plot(f1,1,100)
plot(f2,1,200)
plot(f1,1,100)
plot(f2,1,100,add=TRUE)
a <- rbind(c(-1,-6,1,0,0),c(-1,-1,0,1,0),c(-1,-3,0,0,1),c(-1,7,0,0,0),c(0,1,0,0,0))
solve(a)
aa <- rbind(c(1,-1,-6,-7,-1,1,0,0,0),c(1,-1,-1,2,0,0,1,0,0),c(1,-1,-3,-5,8,0,0,1,0),c(1,-1,7,-3,-2,0,0,0,1),c(0,0,1,1,1,0,0,0,0))
aa
solve(a) %*% aa
ab <- rbind(c(-1,0,1,0),c(-1,-2,0,1),c(-1,1,0,0),c(0,1,0,0))
a <- rbind(c(1,-1,0,2,-3,1,0,0),c(1,-1,-2,0,3,0,1,0),c(1,-1,1,-1,0,0,0,1),c(0,0,1,1,1,0,0,0))
solve(ab) %*% a
ab
solve(ab)
16/3
17/3
21/4
22/4
23/4
26/5
27/5
28/5
29/5
31/6
33/6
34/6
ginc(ab)
library(MASS)
ginv(ab)
solve(ab)
5.551115
a
q <- c(-1,0,1,0,1,0,0,0)
w <- c(-1,-2,0,1,0,1,0,0)
q <- -1 * q
q
q
w
w <- w+q
w
q
q
w
e <- c(-1,1,0,0,0,0,1,0)
r <- c(0,1,0,0,0,0,0,1)
q
w
e
r
e <- e+q
q
w
e
r
w <- -1/2 * w
w
q
w
e
r
e <- e-w
q
w
e
r
r <- r-w
q
w
e
r
e <- -2/3 * e
q
w
e
r
r <- r+1/2*e
q
w
e
r
r <- 3*r
q
w
e
r
q <- q+e
q
w <- w-1/2*e
w
e
ab
abi <- rbind(c(0,0,-1,1),c(0,0,0,1),c(1,0,-1,1),c(0,1,-1,3))
ab %*% abi
abi
solve(ab)
abi %*% a
abi
y <- c(0,-1,1,-3)
y
a
y %*% a
ya <- y%*%a
ya
b <- rbind(0,0,0,1)
b
yb <- y %*% b
yb
ya
ab <- rbind(c(-1,-6,1,0,0),c(-1,-1,0,1,0),c(-1,-3,0,0,1),c(-1,7,0,0,0),c(0,1,0,0,0))
cb <- rbind(-1,0,0,0,0)
abi <- solve(ab)
abi %*% cb
y <- abi %*% cb
y
c <- rbind(1,-1,0,0,0,0,0,0,0)
y
a
a <- rbind(c(1,-1,-6,-7,-1,1,0,0,0),c(1,-1,-1,2,0,0,1,0,0),c(1,-1,-3,-5,8,0,0,1,0),c(1,-1,7,-3,-2,0,0,0,1),c(0,0,1,1,1,0,0,0,0))
a
y
t(y)
c
t(c)-t(y)%*%a
abi
y <- t(abi) %*% cb
y
t(c)- t(y)%*%a
a <- rbind(c(1,-1,0,2,-3,1,0,0),c(1,-1,-2,0,3,0,1,0),c(1,-1,1,-1,0,0,0,1),c(0,0,1,1,1,0,0,0))
a
ab <- rbind(c(-1,0,1,0),c(-1,-2,0,1),c(-1,1,0,0),c(0,1,0,0))
cb <- rbind(-1,0,0,0)
ab
abi
abi <- solve(ab)
abi
y <- t(abi)%*%cb
y
cb
abi
abi %*% cb
t(abi)
y
y
c <- c(1,-1,0,0,0,0,0,0)
c-t(y)%*%a
b <- rbind(0,0,0,1)
b
t(y)%*%b
y%*%b
t(y)%*%b
a
a <- rbind(c(-1,1,0,2,1,0,0,-1),c(0,0,1,1,1,0,0,0),c(0,0,0,4,-2,1,0,-1),c(0,0,0,4,6,0,1,-1))
ab <- rbind(c(1,0,2,0),c(0,1,1,0),c(0,0,4,0),c(0,0,4,1))
solve(ab) %*% a
a <- solve(ab) %*% a
a
ab <- rbind(c(0,0,2,0),c(1,0,3/2,0),c(0,1,-1/2,0),c(0,0,8,1))
ab
solve(ab) %*% a
a <- solve(ab) %*% a
ab <- rbind(c(3/4,1,0,0),c(-1/4,0,1,0),c(-1/2,0,0,1),c(4,0,0,0))
solve(ab) %*% a
a <- solve(ab) %*% a
a
ab <- a[c(3,4,5,6)]
ab
a[3]
a[1,2]
a[,c(3,4,5,6)]
ab <- a[,c(3,4,5,6)]
ab
solve(ab) %*% a
a <- solve(ab) %*% a
ab <- a[,c(1,3,4,5)]
solve(ab) %*% a
a <- rbind(c(-1,1,0,2,1,0,0,-1),c(0,0,1,1,1,0,0,0),c(0,0,0,4,-2,1,0,-1),c(0,0,0,4,6,0,1,-1))
b <- rbind(1,1,1,3)
a
b/a[,4]
ab <- a[,c(2,3,4,7)]
ab
b <- b-1/4*a[,4]
b
ab
solve(ab) %*% a
a <- solve(ab) %*% a
a
b/a[,5]
b
b <- rbind(1/2,3/4,1/4,2)
b
a
b/a[,5]
ab <- a[,c(3,4,5,7)]
a <- solve(ab) %*% a
a
b
b
b-1/4*c(2,3/2,-1/2,8)
b <- c(3/8,3/8,1/4,0)
ab
a
b/a[,1]
ab <- a[,c(1,3,4,5)]
ab
a <- solve(ab) %*% a
a
a
a <- rbind(c(1,-1,0,2,-3,1,0,0),c(1,-1,-2,0,3,0,1,0),c(1,-1,1,-1,0,0,0,1),c(0,0,1,1,1,0,0,0))
x <- rbind(0,1,1,0,0,1,3,0)
a %*% x
a <- rbind(c(1,-1,-6,-7,-1,1,0,0,0),c(1,-1,-1,2,0,0,1,0,0),c(1,-1,-3,-5,8,0,0,1,0),c(1,-1,7,-3,-2,0,0,0,1),c(0,0,1,1,1,0,0,0,0))
a
ab <- a[,c(2,3,6,7,8)]
solve(ab) %&% a
solve(ab) %*% a
a <- solve(ab) %*% a
b <- rbind(7,1,13,8,10)
b/a[,4]
ab <- a[,c(2,3,4,6,8)]
b <- rbind(11/3, 5/13,8/13,97/13,66/13)
b
a <- solve(ab) %*% a
a
b/a[,5]
b
a <- rbind(c(3/4,-3/4,1,0,0,1/8,0,5/8),c(-1/4,1/4,0,1,0,1/8,0,-3/8),c(-1/2,1/2,0,0,1,-1/4,0,-1/4),c(4,-4,0,0,0,1,1,2))
a
b <- rbind(3/8,3/8,1/4,0)
b
b/a[,6]
ab <- a[,c(3,4,5,6)]
ab
a <- solve(ab) %*% a
a
b/a[,8]
ab <- a[,c(3,4,5,8)]
ab
a <- solve(ab)%*% a
a
3/16
5/16
b
a <- rbind(c(-1,1,0,0,2,-1/2,0,-1/2),c(0,0,1,0,3/2,-1/4,0,1/4),c(0,0,0,1,-1/2,1/4,0,-1/4),c(0,0,0,0,8,-1,1,0))
a
b <- rbind(1/2,3/4,1/4,2)
b/a[,5]
ab <- a[,c(3,4,5,7)]
ab
solve(ab) %*% a
ab <- a[,c(2,3,4,5)]
ab
solve(ab) %*% a
b
b-1/4*a[,5]
a
a <- rbind(c(1,-1,0,2,-1,1,0,0),c(1,-1,-2,0,1,0,1,0),c(1,-1,1,-1,0,0,0,1),c(0,0,1,1,1,0,0,0))
a
ab <- a[,c(2,3,6,7)]
solve(ab) %*% a
a <- solve(ab) %*% a
ab <- a[,c(2,3,4,7)]
ab
a
ab
a <- solve(ab) %*% a
a
ab <- a[,c(3,4,5,7)]
solve(ab) %*% a
ab <- a[,c(2,3,4,5)]
a
ab
solve(ab) %*% a
a <- rbind(c(1,-1,0,2,-1,1,0,0),c(1,-1,-1,0,1,0,1,0),c(1,-1,1,-2,0,0,0,1),c(0,0,1,1,1,0,0,0))
a
a
b <- rbind(1,1,1,2)
ab <- a[,c(2,3,6,7)]
ab
a <- solve(ab) %*% a
a
b
b/a[,4]
a
b - 1/5 * a[,4]
b <- rbind(2/5,4/5,1/5,6/5)
b
ab
ab <- a[,c(2,3,4,7)]
ab
a <- solve(ab) %*% a
a
b
b/a[,5]
ab <- a[,c(2,3,4,5)]
solve(ab) %*% a
b
b-2/5*a[,5]
a <- solve(ab) %*% a
a
shiny::runApp('Desktop/SMART/datastories')
shiny::runApp('Desktop/SMART/datastories')
shiny::runApp('Desktop/SMART/datastories')
shiny::runApp('Desktop/SMART/datastories')
shiny::runApp('Desktop/SMART/datastories')
shiny::runApp('Desktop/SMART/datastories')
shiny::runApp('Desktop/SMART/datastories')
shiny::runApp('Desktop/SMART/datastories')
shiny::runApp('Desktop/SMART/datastories')
shiny::runApp('Desktop/SMART/datastories')
shiny::runApp('Desktop/SMART/datastories')
shiny::runApp('Desktop/SMART/datastories')
shiny::runApp('Desktop/SMART/datastories')
shiny::runApp('Desktop/SMART/datastories')
shiny::runApp('Desktop/SMART/datastories')
shiny::runApp('Desktop/SMART/datastories')
shiny::runApp('Desktop/SMART/datastories')
shiny::runApp('Desktop/SMART/datastories')
shiny::runApp('Desktop/SMART/datastories')
shiny::runApp('Desktop/SMART/datastories')
dat <- read.csv('data/final.csv',stringsAsFactors = FALSE, header=T)
setwd("~/Desktop/SMART/datastories")
dat <- read.csv('data/final.csv',stringsAsFactors = FALSE, header=T)
qtime_np <- dat[dat[,"mall"]=="np" & !is.na(dat[,"qtime"]) & !is.na(dat[,"park_location"]) & dat[,"park_location"]=="LB" & dat[,"qtime"]<=45,"qtime"]
qtime_tp <- dat[dat[,"mall"]=="tp" & !is.na(dat[,"qtime"]) & !is.na(dat[,"park_location"]) & dat[,"park_location"]=="LB" & dat[,"qtime"]<=45,"qtime"]
tmp <- data.frame(x=c(qtime_tp, qtime_np), fac=c(rep(1,length(qtime_tp)), rep(2,length(qtime_np))))
tmp$fac <- as.factor(tmp$fac)
qtime_plot <- ggplot(tmp, aes(x, linetype = fac)) + stat_ecdf(size=1) +
ggtitle("Queueing time cumulative distribution") + theme_bw() + xlab("Time (minutes)") + ylab("Fraction")+
theme(
axis.title.x = element_text(size=23),
axis.text.x  = element_text(size=20),
axis.title.y = element_text(size=23),
axis.text.y  = element_text(size=20),
plot.title = element_text(size=27, face="bold") ) +
scale_x_continuous(breaks = round(seq(min(c(qtime_np, qtime_tp)), max(c(qtime_np, qtime_tp)), by = 5),1))
qtime_plot
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?stat_ecdf
shiny::runApp()
View(tmp)
qtime_np <- dat[dat[,"mall"]=="np" & !is.na(dat[,"qtime"]) & !is.na(dat[,"park_location"]) & dat[,"park_location"]=="LB" & dat[,"qtime"]<=45,"qtime"]
qtime_tp <- dat[dat[,"mall"]=="tp" & !is.na(dat[,"qtime"]) & !is.na(dat[,"park_location"]) & dat[,"park_location"]=="LB" & dat[,"qtime"]<=45,"qtime"]
tmp <- data.frame(x=c(qtime_tp, qtime_np), fac=c(rep(1,length(qtime_tp)), rep(2,length(qtime_np))))
View(tmp)
View(dat)
qtime_np <- dat[dat[,"mall"]=="np" & !is.na(dat[,"qtime"]) & !is.na(dat[,"park_location"]) & dat[,"park_location"]=="LB" & dat[,"qtime"]<=45,"qtime"]
qtime_tp <- dat[dat[,"mall"]=="tp" & !is.na(dat[,"qtime"]) & !is.na(dat[,"park_location"]) & dat[,"park_location"]=="LB" & dat[,"qtime"]<=45,"qtime"]
tmp <- data.frame(x=c(qtime_tp, qtime_np), fac=c(rep(1,length(qtime_tp)), rep(2,length(qtime_np))))
tmp$fac <- as.factor(tmp$fac)
qtime_plot <- ggplot(tmp, aes(x, linetype = fac)) + stat_ecdf(size=1) +
ggtitle("Queueing time cumulative distribution") + theme_bw() + xlab("Time (minutes)") + ylab("Fraction")+
theme(
axis.title.x = element_text(size=23),
axis.text.x  = element_text(size=20),
axis.title.y = element_text(size=23),
axis.text.y  = element_text(size=20),
plot.title = element_text(size=27, face="bold") ) +
scale_x_continuous(breaks = round(seq(min(c(qtime_np, qtime_tp)), max(c(qtime_np, qtime_tp)), by = 5),1))
qtime_plot
qtime_plot <- ggplot(tmp, aes(x, linetype = fac)) + geom_step(stat='ecdf') +
ggtitle("Queueing time cumulative distribution") + theme_bw() + xlab("Time (minutes)") + ylab("Fraction")+
theme(
axis.title.x = element_text(size=23),
axis.text.x  = element_text(size=20),
axis.title.y = element_text(size=23),
axis.text.y  = element_text(size=20),
plot.title = element_text(size=27, face="bold") ) +
scale_x_continuous(breaks = round(seq(min(c(qtime_np, qtime_tp)), max(c(qtime_np, qtime_tp)), by = 5),1))
qtime_plot
shiny::runApp()
qtime_plot <- ggplot(tmp, aes(x, linetype = fac)) + stat_bin(geom='stat') +
ggtitle("Queueing time cumulative distribution") + theme_bw() + xlab("Time (minutes)") + ylab("Fraction")+
theme(
axis.title.x = element_text(size=23),
axis.text.x  = element_text(size=20),
axis.title.y = element_text(size=23),
axis.text.y  = element_text(size=20),
plot.title = element_text(size=27, face="bold") ) +
scale_x_continuous(breaks = round(seq(min(c(qtime_np, qtime_tp)), max(c(qtime_np, qtime_tp)), by = 5),1))
qtime_plot <- ggplot(tmp, aes(x, linetype = fac)) + stat_bin(geom='step') +
ggtitle("Queueing time cumulative distribution") + theme_bw() + xlab("Time (minutes)") + ylab("Fraction")+
theme(
axis.title.x = element_text(size=23),
axis.text.x  = element_text(size=20),
axis.title.y = element_text(size=23),
axis.text.y  = element_text(size=20),
plot.title = element_text(size=27, face="bold") ) +
scale_x_continuous(breaks = round(seq(min(c(qtime_np, qtime_tp)), max(c(qtime_np, qtime_tp)), by = 5),1))
qtime_plot
qtime_plot <- ggplot(tmp, aes(x, linetype = fac)) + stat_bin(aes(y=cumsum(..count..)),geom='step') +
ggtitle("Queueing time cumulative distribution") + theme_bw() + xlab("Time (minutes)") + ylab("Fraction")+
theme(
axis.title.x = element_text(size=23),
axis.text.x  = element_text(size=20),
axis.title.y = element_text(size=23),
axis.text.y  = element_text(size=20),
plot.title = element_text(size=27, face="bold") ) +
scale_x_continuous(breaks = round(seq(min(c(qtime_np, qtime_tp)), max(c(qtime_np, qtime_tp)), by = 5),1))
qtime_plot
qtime_plot <- ggplot(tmp, aes(x, linetype = fac)) + stat_bin(aes(y=cumsum(..count..)/..count..),geom='step') +
ggtitle("Queueing time cumulative distribution") + theme_bw() + xlab("Time (minutes)") + ylab("Fraction")+
theme(
axis.title.x = element_text(size=23),
axis.text.x  = element_text(size=20),
axis.title.y = element_text(size=23),
axis.text.y  = element_text(size=20),
plot.title = element_text(size=27, face="bold") ) +
scale_x_continuous(breaks = round(seq(min(c(qtime_np, qtime_tp)), max(c(qtime_np, qtime_tp)), by = 5),1))
qtime_plot
shiny::runApp()
shiny::runApp()
shiny::runApp()
dat <- read.csv('data/final.csv',stringsAsFactors = FALSE, header=T)
View(dat)
shiny::runApp()
shiny::runApp()
?ggplot
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
<<<<<<< HEAD
=======
library(rsconnect)
rsconnect::deployApp('/Users/GZQ/Desktop/SMART/datastories/')
shiny::runApp()
shiny::runApp()
>>>>>>> giacomodc/master
